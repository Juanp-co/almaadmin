{"version":3,"sources":["./src/app/views/miembros/detalles-miembro/detalles-miembro.page.html","./src/app/views/miembros/detalles-miembro/detalles-miembro-routing.module.ts","./src/app/views/miembros/detalles-miembro/detalles-miembro.page.ts","./src/app/views/miembros/detalles-miembro/detalles-miembro.module.ts","./src/app/views/miembros/detalles-miembro/detalles-miembro.page.scss"],"names":[],"mappings":"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","file":"detalles-miembro-detalles-miembro-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"!views.data.edit\\\">\\n      <ion-button (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ title }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"staticData && enableActions && showAdminButtons && showDeleteButton\\\">\\n      <ion-button expand=\\\"full\\\" (click)=\\\"confirmDelete()\\\" slot=\\\"end\\\" *ngIf=\\\"!views.data.edit\\\">\\n        <ion-icon name=\\\"trash-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-text>Eliminar miembro</ion-text>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"staticData\\\">\\n    <ion-card *ngIf=\\\"views.data.data\\\">\\n      <ion-card-header class=\\\"ion-no-padding ion-no-margin\\\">\\n        <ion-toolbar color=\\\"primary\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"setShowView('data')\\\" *ngIf=\\\"!views.data.edit && !editRole && !resetPassword\\\">\\n              <ion-icon name=\\\"chevron-{{views.data.show ? 'up' : 'down' }}-outline\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"showFormEdit()\\\" *ngIf=\\\"views.data.edit\\\">\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"showFormEditRole()\\\" *ngIf=\\\"editRole\\\">\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n          <ion-title *ngIf=\\\"!views.data.edit && !editRole\\\">{{ views.data.label }}</ion-title>\\n          <ion-title *ngIf=\\\"views.data.edit\\\">Editar perfil del miembro</ion-title>\\n          <ion-title *ngIf=\\\"editRole\\\">Cambiar rol del miembro</ion-title>\\n          <ion-buttons slot=\\\"end\\\" *ngIf=\\\"views.data.show && showAdminButtons\\\">\\n            <ion-button\\n              color=\\\"light\\\"\\n              expand=\\\"full\\\"\\n              (click)=\\\"showFormEdit()\\\"\\n              slot=\\\"end\\\"\\n              *ngIf=\\\"!views.data.edit && !editRole && !resetPassword\\\"\\n            >\\n              <ion-icon name=\\\"create-outline\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-text>Editar</ion-text>\\n            </ion-button>\\n            <ion-button\\n              color=\\\"light\\\"\\n              expand=\\\"full\\\"\\n              (click)=\\\"showFormEditRole()\\\"\\n              slot=\\\"end\\\"\\n              *ngIf=\\\"!views.data.edit && !editRole && !resetPassword\\\"\\n            >\\n              <ion-icon name=\\\"key-outline\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-text>Cambiar rol</ion-text>\\n            </ion-button>\\n            <ion-button\\n              color=\\\"light\\\"\\n              expand=\\\"full\\\"\\n              slot=\\\"end\\\"\\n              (click)=\\\"showFormPassword()\\\"\\n              *ngIf=\\\"isAdmin && !views.data.edit && !editRole && !resetPassword\\\"\\n            >\\n              <ion-icon name=\\\"lock-closed-outline\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-text>Reiniciar contraseña</ion-text>\\n            </ion-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n      </ion-card-header>\\n      <ion-card-content class=\\\"{{ views.data.show ? '' : 'ion-hide' }} ion-no-padding\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" *ngIf=\\\"!views.data.edit && !editRole && !resetPassword\\\">\\n            <app-resume-profile\\n              [member]=\\\"staticData\\\"\\n              [handleConsolidator]=\\\"handleSetAsConsolidator\\\"\\n            ></app-resume-profile>\\n          </ion-col>\\n\\n          <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"views.data.edit && formData\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Teléfono (*)</ion-label>\\n                  <ion-input\\n                    [(ngModel)]=\\\"formData.phone\\\"\\n                    autocomplete=\\\"off\\\"\\n                    maxlength=\\\"13\\\"\\n                    (keypress)=\\\"validateOnlyNumber($event)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nombre(s) (*)</ion-label>\\n                  <ion-input\\n                    [(ngModel)]=\\\"formData.names\\\"\\n                    autocomplete=\\\"off\\\"\\n                    maxlength=\\\"50\\\"\\n                    (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                    class=\\\"ion-text-uppercase\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Apellidos(s) (*)</ion-label>\\n                  <ion-input\\n                    [(ngModel)]=\\\"formData.lastNames\\\"\\n                    autocomplete=\\\"off\\\"\\n                    maxlength=\\\"50\\\"\\n                    (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                    class=\\\"ion-text-uppercase\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Fecha de nacimiento</ion-label>\\n                  <ion-datetime\\n                    [(ngModel)]=\\\"formData.birthday\\\"\\n                    displayFormat=\\\"DD/MM/YYYY\\\"\\n                    min=\\\"1910-03-14\\\"\\n                    max=\\\"{{maxDate}}\\\"\\n                    doneText=\\\"Listo\\\"\\n                    cancelText=\\\"Cancelar\\\"\\n                    (ionChange)=\\\"setDate()\\\"\\n                  >\\n                  </ion-datetime>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de documento</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"formData.documentType ? getDocumentLabel(formData.documentType) : ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertDocumentList(formData.documentType)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Número de documento</ion-label>\\n                  <ion-input\\n                    [(ngModel)]=\\\"formData.document\\\"\\n                    autocomplete=\\\"off\\\"\\n                    maxlength=\\\"10\\\"\\n                    (keypress)=\\\"validateOnlyNumber($event)\\\"\\n                    class=\\\"ion-text-uppercase\\\"\\n                  >\\n                  </ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Correo electrónico</ion-label>\\n                  <ion-input [(ngModel)]=\\\"formData.email\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Cargo(s) o posición</ion-label>\\n                  <ion-input\\n                    [(ngModel)]=\\\"formData.position\\\"\\n                    autocomplete=\\\"off\\\"\\n                    maxlength=\\\"50\\\"\\n                    (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                    class=\\\"ion-text-uppercase\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Sexo</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"gender[formData.gender] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertList('gender', 'gender', formData.gender)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de sangre</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"bloodType[formData.bloodType] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertList('bloodType', 'bloodType', formData.bloodType)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Estado civil</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"civilStatus[formData.civilStatus] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertList('civilStatus', 'civilStatus', formData.civilStatus)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nivel educativo</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"educationLevel[formData.educationLevel] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertList('educationLevel', 'educationLevel', formData.educationLevel)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Profesión</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"professions[formData.profession] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertList('profession', 'professions', formData.profession)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Iglesia a la que asiste</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"churchForm?.name || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"ion-text-uppercase no-selected-text\\\"\\n                    (click)=\\\"showAlertChurchesList()\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">¿Asitió al curso de nuevo ingreso?</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"formData.meetingNew\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertYesOrNotList('meetingNew', formData.meetingNew)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">¿Estás bautizado?</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"formData.baptized\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertYesOrNotList('baptized', formData.baptized)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Departamento</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"departments[formData.department] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"ion-text-uppercase no-selected-text\\\"\\n                    (click)=\\\"showAlertList('department', 'departments', formData.department)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Ciudad</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"cities[formData.city] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"ion-text-uppercase no-selected-text\\\"\\n                    (click)=\\\"showAlertList('city', 'cities', formData.city)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Barrio o localidad</ion-label>\\n                  <ion-input [(ngModel)]=\\\"formData.locality\\\" autocomplete=\\\"off\\\" maxlength=\\\"100\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Dirección</ion-label>\\n                  <ion-input [(ngModel)]=\\\"formData.direction\\\" autocomplete=\\\"off\\\" maxlength=\\\"250\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">¿Posee una empresa?</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"formData.company\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showAlertYesOrNotList('company', formData.company)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\" size-sm=\\\"6\\\" *ngIf=\\\"formData.company === 'Si';\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de empresa</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"companyType[formData.companyType] || ''\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"ion-text-uppercase no-selected-text\\\"\\n                    (click)=\\\"showAlertList('companyType', 'companyType', formData.companyType)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top\\\">\\n                <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campos requeridos.</i></ion-text>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-margin-bottom ion-text-center\\\">\\n                <ion-button color=\\\"medium\\\" (click)=\\\"showFormEdit()\\\">\\n                  <ion-icon name=\\\"close-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Cancelar</ion-text>\\n                </ion-button>\\n                <ion-button color=\\\"primary\\\" (click)=\\\"confirmUpdate()\\\">\\n                  <ion-icon name=\\\"save-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Guardar</ion-text>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-col>\\n\\n          <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"editRole\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Roles actuales</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"this.globalSer.getRoleValue(staticData.roles)\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nuevos roles (*)</ion-label>\\n                  <ion-input\\n                    [readonly]=\\\"true\\\"\\n                    [value]=\\\"this.globalSer.getRoleValue(formDataRole.roles)\\\"\\n                    autocomplete=\\\"off\\\"\\n                    class=\\\"no-selected-text\\\"\\n                    (click)=\\\"showRolesListAlert(formDataRole.roles)\\\"\\n                  ></ion-input>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top\\\">\\n                <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campos requeridos.</i></ion-text>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-margin-bottom ion-text-center\\\">\\n                <ion-button color=\\\"medium\\\" (click)=\\\"showFormEditRole()\\\">\\n                  <ion-icon name=\\\"close-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Cancelar</ion-text>\\n                </ion-button>\\n                <ion-button color=\\\"primary\\\" (click)=\\\"confirmUpdateRole()\\\">\\n                  <ion-icon name=\\\"save-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Guardar</ion-text>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-col>\\n\\n          <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"resetPassword\\\">\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-text color=\\\"medium\\\">\\n                    Genere una nueva contraseña para la cuenta del usuario.\\n                    Esta es visualizada para que pueda copiarla y compartirla con el usuario respectivo.<br>\\n                    La contraseña puede generarla aleatoriamente, ya luego el usuario decidirá si desea cambiar la contraseña\\n                    desde su pefil.\\n                  </ion-text>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Indique la nueva contraseña</ion-label>\\n                  <ion-input [(ngModel)]=\\\"password\\\" autocomplete=\\\"off\\\"></ion-input>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campo requerido.</i></ion-text>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" class=\\\"ion-margin-top ion-margin-bottom\\\">\\n                <ion-button color=\\\"medium\\\" (click)=\\\"generatePassword()\\\">\\n                  <ion-icon name=\\\"sync-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Generar contraseña</ion-text>\\n                </ion-button>\\n              </ion-col>\\n              <ion-col size=\\\"12\\\" class=\\\"ion-margin-top ion-margin-bottom ion-text-center\\\">\\n                <ion-button color=\\\"medium\\\" (click)=\\\"showFormPassword()\\\">\\n                  <ion-icon name=\\\"close-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Cancelar</ion-text>\\n                </ion-button>\\n                <ion-button color=\\\"primary\\\" (click)=\\\"confirmResetPassword()\\\">\\n                  <ion-icon name=\\\"save-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-text>Asignar</ion-text>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card class=\\\"{{ views.data.edit || editRole || resetPassword ? 'ion-hide' : '' }}\\\">\\n      <ion-card-header class=\\\"ion-no-padding ion-no-margin\\\">\\n        <ion-toolbar color=\\\"primary\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"setShowView('referrals')\\\">\\n              <ion-icon name=\\\"chevron-{{views.referrals.show ? 'up' : 'down' }}-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n          <ion-title>{{ views.referrals.label }}</ion-title>\\n        </ion-toolbar>\\n      </ion-card-header>\\n      <ion-card-content class=\\\"{{ views.referrals.show ? '' : 'ion-hide' }}\\\">\\n        <ion-row class=\\\"ion-margin-bottom\\\">\\n          <ion-col size=\\\"12\\\" size-sm=\\\"5\\\" class=\\\"{{ views.referrals.referred ? '' : 'ion-hide' }} ion-margin-top\\\" *ngIf=\\\"views.referrals.referred\\\">\\n            <ion-text class=\\\"ion-margin-top\\\"><h2><b>Padre espiritual:</b></h2></ion-text>\\n            <app-usercard [data]=\\\"views.referrals.referred\\\"></app-usercard>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" [sizeSm]=\\\"views.referrals.referred ? 7 : 12\\\" class=\\\"ion-text-center ion-margin-top\\\">\\n            <h2 class=\\\"numberTitle ion-margin-bottom\\\">{{ totals.totalsReferrals }}</h2>\\n            <h1 class=\\\"ion-margin-top ion-margin-bottom\\\">Total de hijos</h1>\\n            <ion-text class=\\\"ion-margin-top\\\" color=\\\"medium\\\" *ngIf=\\\"totals.totalsReferrals\\\">\\n              <p class=\\\"ion-margin-top\\\">\\n                <ion-icon name=\\\"alert-circle-outline\\\"></ion-icon>\\n                El número total de hijos se refiere a los hijos este miembro, sumado con los hijos de estos.\\n              </p>\\n            </ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <br>\\n        <ion-row class=\\\"ion-margin-top ion-margin-bottom max-height-250\\\" *ngIf=\\\"views.referrals.data.length > 0; else noReferrals\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-text><h2><b>Hijos espirituales:</b></h2></ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" *ngFor=\\\"let ref of views.referrals.data\\\">\\n            <app-usercard [data]=\\\"ref\\\"></app-usercard>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ng-template #noReferrals>\\n          <ion-row class=\\\"ion-margin-top\\\">\\n            <ion-col size=\\\"12\\\">\\n              <ion-text color=\\\"medium\\\">\\n                <p class=\\\"ion-text-center\\\">\\n                  <ion-icon name=\\\"alert-circle-outline\\\"></ion-icon>\\n                  Este miembro no posee hijos espirituales.\\n                </p>\\n              </ion-text>\\n            </ion-col>\\n          </ion-row>\\n        </ng-template>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card class=\\\"{{ views.data.edit || editRole || resetPassword ? 'ion-hide' : '' }}\\\">\\n      <ion-card-header class=\\\"ion-no-padding ion-no-margin\\\">\\n        <ion-toolbar color=\\\"primary\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"setShowView('courses')\\\">\\n              <ion-icon name=\\\"chevron-{{views.courses.show ? 'up' : 'down' }}-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n          <ion-title>{{ views.courses.label }} ({{views.courses.data.length}})</ion-title>\\n        </ion-toolbar>\\n      </ion-card-header>\\n      <ion-card-content class=\\\"{{ views.courses.show ? '' : 'ion-hide' }}\\\">\\n        <ion-row *ngIf=\\\"views.courses.data.length > 0; else noCourses\\\">\\n          <ion-col size=\\\"4\\\" *ngFor=\\\"let c of views.courses.data\\\">\\n            <app-cursoscard [course]=\\\"c\\\"></app-cursoscard>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ng-template #noCourses>\\n          <ion-row class=\\\"ion-margin-top\\\">\\n            <ion-col size=\\\"12\\\">\\n              <ion-text color=\\\"medium\\\">\\n                <p class=\\\"ion-text-center\\\">\\n                  <ion-icon name=\\\"alert-circle-outline\\\"></ion-icon>\\n                  Este miembro no posee cursos en su cuenta.\\n                </p>\\n              </ion-text>\\n            </ion-col>\\n          </ion-row>\\n        </ng-template>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <div class=\\\"ion-margin\\\"><br/></div>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DetallesMiembroPage } from './detalles-miembro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DetallesMiembroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DetallesMiembroPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AlertController, NavController} from '@ionic/angular';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/es';\nimport {IDetallesMiembro, IDetallesMiembroEdit, IDetallesMiembroTotals} from './detalles-miembro.model';\nimport {DetallesMiembroService} from './detalles-miembro.service';\nimport {AxiosService} from '../../../services/axios.service';\nimport {GlobalService} from '../../../services/global.service';\nimport {rolesListSingleText} from '../../../../Utils/data.static';\nimport {\n  checkDate, checkEmail,\n  checkIfValueIsNumber,\n  checkNameOrLastName,\n  checkPhone,\n  onlyLettersInputValidation,\n  onlyNumbersInputValidation\n} from '../../../../Utils/validations.functions';\nimport {CookiesService} from '../../../services/cookies.service';\n\n@Component({\n  selector: 'app-detalles-miembro',\n  templateUrl: './detalles-miembro.page.html',\n  styleUrls: ['./detalles-miembro.page.scss'],\n})\nexport class DetallesMiembroPage implements OnInit {\n  // static data to edit values\n  professions = [];\n  companyType = [];\n  educationLevel = [];\n  bloodType = [];\n  departments = [];\n  cities = [];\n  civilStatus = [];\n  gender = [];\n  documentTypes = [];\n  yesOrNotValues = ['No', 'Si'];\n  maxDate: any = null;\n  churches: any = null;\n  church: any = null;\n\n  // info profile\n  title = 'Cargando...';\n  id: string|null = null;\n  user: IDetallesMiembro | null = null;\n  staticData: IDetallesMiembro | null = null;\n  totals: IDetallesMiembroTotals | null = null;\n  enableActions = false;\n  editRole = false;\n  resetPassword = false;\n  isAdmin = false;\n  showAdminButtons = false;\n  showDeleteButton = false;\n  formData: IDetallesMiembroEdit | null = null;\n  formDataRole: any = {\n    roles: []\n  };\n  churchForm: any = null;\n  password = '';\n\n  views: any = {\n    data: {\n      label: 'Datos del miembro',\n      show: true,\n      edit: false,\n      data: null,\n    },\n    courses: {\n      label: 'Cursos',\n      show: false,\n      data: [],\n    },\n    referrals: {\n      label: 'Hijos espirituales',\n      show: false,\n      referred: null,\n      data: [],\n    }\n  };\n\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private alertCtrl: AlertController,\n    private axios: AxiosService,\n    private cookiesService: CookiesService,\n    public globalSer: GlobalService,\n    private detallesMiembroService: DetallesMiembroService,\n    private navCtrl: NavController,\n    private router: Router,\n  ) {\n    // check if exist session\n    if (!this.globalSer.checkSession()) this.router.navigate(['/ingresar']);\n    else {\n      this.documentTypes = detallesMiembroService.documentTypesList;\n      this.educationLevel = detallesMiembroService.educationLevel;\n      this.professions = detallesMiembroService.professionsList;\n      this.bloodType = detallesMiembroService.bloodTypeList;\n      this.companyType = detallesMiembroService.companyTypeList;\n      this.civilStatus = detallesMiembroService.civilStatusList;\n      this.gender = detallesMiembroService.genderList;\n      this.departments = detallesMiembroService.departmentsList.map(d => d.department);\n      this.maxDate = dayjs().format('YYYY-MM-DD');\n    }\n  }\n\n  async ngOnInit() {\n    await this.globalSer.presentLoading();\n    this.isAdmin = this.globalSer.checkRoleIsSuperAdmin();\n    this.showAdminButtons = this.globalSer.checkRoleToEnableAddOrUpdate();\n    this.enableActions = this.showAdminButtons;\n    this.id = this.activateRoute.snapshot.paramMap.get('userid');\n    this.churches = await this.cookiesService.getCookie('churches');\n    if (!this.churches) {\n      this.churches = await this.detallesMiembroService.getChurches();\n      await this.cookiesService.setCookie('churches', this.churches || []);\n    }\n    const data: any = await this.detallesMiembroService.getUserDetails(this.id);\n\n    if (data && !data.error) {\n      this.staticData = {...data} as IDetallesMiembro;\n      this.views.data.data = this.staticData;\n      this.views.referrals.referred = this.staticData.referred;\n      this.totals = this.staticData.totals;\n      this.showDeleteButton = (this.isAdmin);\n      this.title = `Detalles: ${this.staticData.names} ${this.staticData.lastNames}`;\n\n      this.getCourses();\n      this.getReferrals();\n      await this.globalSer.dismissLoading();\n    }\n    else if (data && data.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  async ionViewWillEnter() {\n    if (!this.globalSer.checkSession())\n      await this.router.navigate(['/ingresar']);\n  }\n\n  async updateData() {\n    await this.globalSer.presentLoading('Actualizando, por favor espere ...');\n\n    const data: any = {...this.formData};\n    if (data.documentType) data.document = `${data.documentType.toUpperCase()}${data.document}`;\n    data.company = data.company === 'Si';\n    data.baptized = data.baptized === 'Si';\n    data.meetingNew = data.meetingNew === 'Si';\n    if (data.position) data.position = data.position.trim().toUpperCase();\n\n    const updated = await this.detallesMiembroService.updateDataUser(this.id, data);\n\n    if (updated && !updated.error) {\n      this.user = {...updated} as IDetallesMiembro;\n      this.staticData = {...updated} as IDetallesMiembro;\n      // await this.setUserParams();\n      this.title = `Detalles: ${this.staticData.names} ${this.staticData.lastNames}`;\n      await this.showFormEdit(true);\n      await this.globalSer.dismissLoading();\n      await this.globalSer.presentAlert('¡Éxito!', 'Se ha actualizado su perfil exitosamente.');\n    }\n    else if (updated && updated.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  async updateRole() {\n    await this.globalSer.presentLoading('Actualizando, por favor espere ...');\n    const data: any = {...this.formDataRole};\n    const updated = await this.detallesMiembroService.updateRoleUser(this.id, data);\n\n    if (updated && !updated.error) {\n      this.staticData.roles = this.formDataRole.roles;\n      this.views.data.data = {...this.staticData};\n      this.showFormEditRole();\n      await this.globalSer.dismissLoading();\n      await this.globalSer.presentAlert('¡Éxito!', 'Se ha actualizado su perfil exitosamente.');\n    }\n    else if (updated && updated.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  async resetPass() {\n    await this.globalSer.presentLoading('Asignando, por favor espere ...');\n    const res = await this.detallesMiembroService.resetPass(this.id, { password: this.password });\n\n    if (!res?.error) {\n      this.showFormPassword();\n      await this.globalSer.dismissLoading();\n      await this.globalSer.presentAlert('¡Éxito!', res);\n    }\n    else if (res && res.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  async setAsConsolidator() {\n    await this.globalSer.presentLoading('Cargando. Por favor, espere...');\n    const updated: any = await this.detallesMiembroService.setAsConsolidator(this.staticData._id);\n\n    if (updated && !updated.error) {\n      this.staticData.consolidator = !this.staticData.consolidator;\n      await this.globalSer.dismissLoading();\n      await this.globalSer.presentAlert(\n        '¡Éxito!',\n        updated || 'Se ha actualizado la información del miembro exitosamente.'\n      );\n    }\n    else if (updated && updated.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  async deleteUser() {\n    await this.globalSer.presentLoading('Eliminando miembro, por favor espere ...');\n\n    const deleted = await this.detallesMiembroService.deleteUser(this.id);\n\n    if (deleted && !deleted.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.presentAlert('¡Éxito!', deleted || 'Se ha eliminado los datos del miembro exitosamente.');\n      await this.back();\n    }\n    else if (deleted && deleted.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  async getCourses() {\n    const data: any = await this.detallesMiembroService.getUsersCourses(this.id);\n\n    if (data && !data.error) this.views.courses.data = data;\n    else if (data && data.error) await this.globalSer.errorSession();\n    else await this.globalSer.dismissLoading();\n  }\n\n  async getReferrals() {\n    const data: any = await this.detallesMiembroService.getUsersReferrals(this.id);\n\n    if (data && !data.error) this.views.referrals.data = data;\n    else if (data && data.error) await this.globalSer.errorSession();\n    else await this.globalSer.dismissLoading();\n  }\n\n  async back() {\n    await this.navCtrl.back();\n  }\n\n  // actions views\n  async setShowView(input: string) {\n    this.views[input].show = !this.views[input].show;\n    if (this.views[input].edit) {\n      await this.showFormEdit();\n    }\n  }\n\n  // getters and setters\n\n  getCity(clearCity = false) {\n    const filter = this.detallesMiembroService.departmentsList[this.formData.department] || null;\n    if (filter) this.cities = filter.cities || [];\n    if (clearCity) this.formData.city = null;\n  }\n\n  getDocumentLabel(value: any) {\n    if (!value) return null;\n    const da = this.documentTypes.find(d => d.val === value);\n    return da ? da.label : null;\n  }\n\n  validateOnlyNumber(event: any) {\n    onlyNumbersInputValidation(event);\n  }\n\n  validateOnlyLetters(event: any) {\n    onlyLettersInputValidation(event);\n  }\n\n  setDate() {\n    if (this.formData.birthday) {\n      this.formData.birthday = dayjs(this.formData.birthday).format('YYYY-MM-DD');\n    }\n  }\n\n  // actions\n  async showFormEdit(edited = false) {\n\n    this.views.data.edit = !this.views.data.edit;\n\n    if (this.views.data.edit) {\n      if (!edited) await this.globalSer.presentLoading();\n      this.formData = {documentType: null, ...this.staticData} as IDetallesMiembroEdit;\n      this.title = `Editar datos de: ${this.formData.names} ${this.formData.lastNames}`;\n      this.formData.documentType = this.formData.document ? this.formData.document.replace(/[0-9]{5,12}/, '') : null;\n      this.formData.document = this.formData.document ? this.formData.document.replace(/[A-Za-z]{1,3}/, '') : null;\n      this.formData.company = this.formData.company ? 'Si' : 'No';\n      this.formData.baptized = this.formData.baptized ? 'Si' : 'No';\n      this.formData.meetingNew = this.formData.meetingNew ? 'Si' : 'No';\n      this.churchForm = this.churches.find(c => c._id === this.formData.church);\n      if (!this.cities) this.getCity();\n\n      if (!edited) await this.globalSer.dismissLoading();\n    }\n    else {\n      this.title = `Detalles: ${this.user.names} ${this.user.lastNames}`;\n      this.formData = null;\n    }\n  }\n\n  showFormEditRole() {\n    this.formDataRole.roles = !this.editRole ? [...this.staticData.roles] : [];\n    this.editRole = !this.editRole;\n  }\n\n  showFormPassword() {\n    this.resetPassword = !this.resetPassword;\n    if (this.resetPassword) this.password = '';\n  }\n\n  generatePassword() {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789¿?¡!+*-#$%&.,';\n    let code = '';\n    for (let i = 0; i < 10; i += 1) code += chars[Math.floor(Math.random() * 75)];\n    this.password = code;\n  }\n\n  async showAlertList(input: string, nameArray: string, selected: any = null) {\n    const inputs: any[] = [];\n    for (const [i, value] of this[nameArray].entries()) {\n      inputs.push({\n        name: `value-${i}`,\n        type: 'radio',\n        label: value,\n        value: i,\n        checked: selected !== null && selected.toString() === i.toString(),\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValue) => {\n        this.formData[input] = selectedValue;\n        if (input === 'department') this.getCity(true);\n      }\n    });\n  }\n\n  async showAlertChurchesList() {\n    const inputs: any[] = [];\n    for (const church of this.churches) {\n      inputs.push({\n        name: `value-${church._id}`,\n        type: 'radio',\n        label: church.name,\n        value: church._id,\n        checked: this.formData.church === church._id,\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValue) => {\n        this.churchForm = this.churches.find(c => c._id === selectedValue);\n        this.formData.church = selectedValue;\n      }\n    });\n  }\n\n  async showRolesListAlert(selected: any = []) {\n    const inputs: any[] = [];\n    const getValue = (i, v) => ({\n      name: `value-${i}`,\n      type: 'checkbox',\n      label: v,\n      value: i,\n      checked: selected.includes(i),\n      disabled: i === 0 && !this.isAdmin\n    });\n\n    for (const [i, value] of rolesListSingleText.entries()) {\n      if (i === 0) {\n        if (this.isAdmin) inputs.push(getValue(i, value));\n      }\n      else inputs.push(getValue(i, value));\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValues: number[] = []) => {\n        if (this.formDataRole.roles.includes(0)) {\n          if (this.isAdmin) this.formDataRole.roles = [...new Set([...selectedValues])];\n          else this.formDataRole.roles = [...new Set([...selectedValues])];\n        }\n        else this.formDataRole.roles = [...new Set([...selectedValues])];\n      }\n    });\n  }\n\n  async showAlertDocumentList(selected: any = null) {\n    const inputs: any[] = [];\n    for (const value of this.documentTypes) {\n      inputs.push({\n        name: `documentType`,\n        type: 'radio',\n        label: value.label,\n        value: value.val,\n        checked: selected !== null && selected === value.val,\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValue) => {\n        this.formData.documentType = selectedValue;\n      }\n    });\n  }\n\n  async showAlertYesOrNotList(input: string, selected: any = null) {\n    const inputs: any[] = [];\n    for (const [i, value] of this.yesOrNotValues.entries()) {\n      inputs.push({\n        name: `value-${i}`,\n        type: 'radio',\n        label: value,\n        value,\n        checked: value === selected,\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValue) => { this.formData[input] = selectedValue; }\n    });\n  }\n\n  validateData(): string|null {\n    const { formData } = this;\n    if (!checkPhone(formData.phone))\n      return 'Disculpe, pero debe indicar su número de teléfono.<br><br>NOTA: Recuerde que el número de teléfono es el miembro de acceso para a la cuenta del miembro.';\n    if (!checkNameOrLastName(formData.names)) return 'Disculpe, pero debe indicar su nombre.';\n    if (!checkNameOrLastName(formData.lastNames)) return 'Disculpe, pero debe indicar su apellido.';\n    if (formData.documentType) {\n      if (['CC', 'TI', 'PAS', 'CE', 'PE'].indexOf(`${formData.documentType}`) === -1) return 'Disculpe, pero debe seleccionar un tipo de documento.';\n      if (!/[0-9]{5,9}/.test(`${formData.document}`)) return 'Disculpe, pero debe indicar su número de documento.';\n    }\n    if (formData.email) if (!checkEmail(formData.email)) return 'Disculpe, pero debe indicar su correo electrónico.';\n    if (formData.birthday) if (!checkDate(formData.birthday)) return 'Disculpe, pero debe indicar su fecha de nacimiento.';\n    if (formData.company !== null && formData.company === 'Si')\n      if (!checkIfValueIsNumber(`${formData.companyType}`)) return 'Disculpe, pero debe indicar el tipo de empresa que posee.';\n\n    return null;\n  }\n\n  validateRoleData(): string|null {\n    const { roles } = this.formDataRole;\n    if (!roles || roles?.length === 0) return 'Disculpe, pero el rol seleccionado es incorrecto.';\n    if (!roles.some(r => [0, 1, 2, 3, 4].includes(r))) return 'Disculpe, pero el rol seleccionado es incorrecto.';\n    return null;\n  }\n\n  async confirmUpdate() {\n    const validated = this.validateData();\n\n    if (validated) await this.globalSer.presentAlert('Alerta', validated);\n    else {\n      await this.globalSer.alertConfirm({\n        header: 'Confirme',\n        message: '¿Está seguro qué desea actualizar información de este miembro?',\n        confirmAction: () => this.updateData()\n      });\n    }\n  }\n\n  async confirmUpdateRole() {\n    const validated = this.validateRoleData();\n\n    if (validated) await this.globalSer.presentAlert('Alerta', validated);\n    else {\n      await this.globalSer.alertConfirm({\n        header: 'Confirme',\n        message: '¿Está seguro qué desea cambiar el rol de este miembro?',\n        confirmAction: () => this.updateRole()\n      });\n    }\n  }\n\n  async confirmResetPassword() {\n    const validated = this.validateRoleData();\n\n    if (this.password.length < 6)\n      await this.globalSer.presentAlert('Alerta', 'Debe indicar la nueva contraseña para el usuario.');\n    else {\n      await this.globalSer.alertConfirm({\n        header: 'Confirme',\n        message: '¿Está seguro qué desea asignar esta nueva contraseña a este miembro?',\n        confirmAction: () => this.resetPass()\n      });\n    }\n  }\n\n  async confirmDelete() {\n    await this.globalSer.alertConfirm({\n      header: 'Confirme',\n      message: `¿Está seguro qué desea eliminar TODA la información de este miembro?\n            <br><br>\n            <b>NOTA:</b> <i>Una vez eliminado, no se podrá recuperar la información asociada al este miembro.</i>\n      `,\n      confirmAction: () => this.deleteUser()\n    });\n  }\n\n  handleSetAsConsolidator = (): void => { this.setAsConsolidator(); };\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DetallesMiembroPageRoutingModule } from './detalles-miembro-routing.module';\r\n\r\nimport { DetallesMiembroPage } from './detalles-miembro.page';\r\n\r\nimport { ComponentsModule } from '../../../components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DetallesMiembroPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [DetallesMiembroPage]\r\n})\r\nexport class DetallesMiembroPageModule {}\r\n","export default \".pictureLogo {\\n  width: 65px !important;\\n  margin: 0 auto !important;\\n}\\n\\n.max-height-250 {\\n  max-height: 450px !important;\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZGV0YWxsZXMtbWllbWJyby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBQTtFQUNBLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSw0QkFBQTtFQUNBLGdCQUFBO0FBQ0YiLCJmaWxlIjoiZGV0YWxsZXMtbWllbWJyby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGljdHVyZUxvZ28ge1xyXG4gIHdpZHRoOiA2NXB4ICFpbXBvcnRhbnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1heC1oZWlnaHQtMjUwIHtcclxuICBtYXgtaGVpZ2h0OiA0NTBweCAhaW1wb3J0YW50O1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuIl19 */\";"],"sourceRoot":"webpack:///"}