{"version":3,"sources":["./src/app/views/miembros/registro/registro-routing.module.ts","./src/app/views/miembros/registro/registro.module.ts","./src/app/views/miembros/registro/registro.page.html","./src/app/views/miembros/registro/registro.page.scss","./src/app/views/miembros/registro/registro.page.ts"],"names":[],"mappings":"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","file":"registro-registro-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistroPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistroPageRoutingModule } from './registro-routing.module';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegistroPageRoutingModule\r\n  ],\r\n  declarations: [RegistroPage]\r\n})\r\nexport class RegistroPageModule {}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Registrar miembro</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"!successRegister\\\">\\r\\n      <ion-card>\\r\\n        <ion-card-content>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n              <ion-text color=\\\"medium\\\">\\r\\n                <p>\\r\\n                  <ion-icon name=\\\"alert-circle-outline\\\"></ion-icon>\\r\\n                  Todos los miembros registrados dispondrán de la siguiente contraseña para el acceso: <b><i>alma1234</i></b>.\\r\\n                  Estos podrán cambiarla (si lo desean) desde la Aplicación Móvil o desde el Panel Administrador (en caso disponga del rol).\\r\\n                </p>\\r\\n              </ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nº de Teléfono (*)</ion-label>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"formData.phone\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  maxlength=\\\"13\\\"\\r\\n                  (keypress)=\\\"validateOnlyNumbers($event)\\\"\\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-text color=\\\"medium\\\">\\r\\n                <i class=\\\"toSmall\\\">El valor de este campo será el usuario para el acceso a la plataforma.</i>\\r\\n              </ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nombre(s) (*)</ion-label>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"formData.names\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  (keyup)=\\\"validateOnlyLetters($event)\\\"\\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Apellido(s) (*)</ion-label>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"formData.lastNames\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  (keyup)=\\\"validateOnlyLetters($event)\\\"\\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Correo electrónico</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"formData.email\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Fecha de nacimiento (*)</ion-label>\\r\\n                <ion-datetime\\r\\n                  [(ngModel)]=\\\"formData.birthday\\\"\\r\\n                  displayFormat=\\\"DD/MM/YYYY\\\"\\r\\n                  min=\\\"1910-03-14\\\"\\r\\n                  max=\\\"{{maxDate}}\\\"\\r\\n                  doneText=\\\"Listo\\\"\\r\\n                  cancelText=\\\"Cancelar\\\"\\r\\n                  (ionChange)=\\\"setDate()\\\"\\r\\n                >\\r\\n                </ion-datetime>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Sexo (*)</ion-label>\\r\\n                <ion-input\\r\\n                  [readonly]=\\\"true\\\"\\r\\n                  [value]=\\\"gender[formData.gender] || ''\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  class=\\\"no-selected-text\\\"\\r\\n                  (click)=\\\"showAlertList('gender', 'gender', formData.gender)\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Estado civil</ion-label>\\r\\n                <ion-input\\r\\n                  [readonly]=\\\"true\\\"\\r\\n                  [value]=\\\"civilStatus[formData.civilStatus] || ''\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  class=\\\"no-selected-text\\\"\\r\\n                  (click)=\\\"showAlertList('civilStatus', 'civilStatus', formData.civilStatus)\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" *ngIf=\\\"churches?.length > 1\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Iglesia a la que asiste</ion-label>\\r\\n                <ion-input\\r\\n                  [readonly]=\\\"true\\\"\\r\\n                  [value]=\\\"church?.name || ''\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  class=\\\"ion-text-uppercase\\\"\\r\\n                  (click)=\\\"showListChurches()\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" [sizeSm]=\\\"churches?.length > 1 ? 4 : 6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Barrio o localidad</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"formData.locality\\\" autocomplete=\\\"off\\\" maxlength=\\\"100\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" [sizeSm]=\\\"churches?.length > 1 ? 4 : 6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Dirección</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"formData.direction\\\" autocomplete=\\\"off\\\" maxlength=\\\"250\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" [sizeSm]=\\\"churches?.length > 1 ? 4 : 6\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Fecha de incorporación</ion-label>\\r\\n                <ion-datetime\\r\\n                  [(ngModel)]=\\\"formData.created_at\\\"\\r\\n                  displayFormat=\\\"DD/MM/YYYY\\\"\\r\\n                  min=\\\"2010-01-01\\\"\\r\\n                  max=\\\"{{maxDate}}\\\"\\r\\n                  doneText=\\\"Listo\\\"\\r\\n                  cancelText=\\\"Cancelar\\\"\\r\\n                  (ionChange)=\\\"setDate()\\\"\\r\\n                >\\r\\n                </ion-datetime>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"12\\\">&nbsp;</ion-col>\\r\\n\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label color=\\\"medium\\\">¿Asiste a un grupo familiar?</ion-label>\\r\\n                <ion-checkbox\\r\\n                  slot=\\\"start\\\"\\r\\n                  [checked]=\\\"formData.attendGroup\\\"\\r\\n                  (ionChange)=\\\"setCheckedValue('attendGroup')\\\"\\r\\n                ></ion-checkbox>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" *ngIf=\\\"formData.attendGroup\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Seleccione un grupo familiar (*)</ion-label>\\r\\n                <ion-input\\r\\n                  [readonly]=\\\"true\\\"\\r\\n                  [value]=\\\"getGroupLabel()\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  class=\\\"no-selected-text\\\"\\r\\n                  (click)=\\\"modalGroups()\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\"></ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label color=\\\"medium\\\">El miembro fue consolidado</ion-label>\\r\\n                <ion-checkbox\\r\\n                  slot=\\\"start\\\"\\r\\n                  [checked]=\\\"formData.consolidated\\\"\\r\\n                  (ionChange)=\\\"setCheckedValue('consolidated')\\\"\\r\\n                ></ion-checkbox>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" *ngIf=\\\"formData.consolidated\\\">\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" *ngIf=\\\"formData.consolidated\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Petición (opcional)</ion-label>\\r\\n                    <ion-input [(ngModel)]=\\\"formData.petition\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label color=\\\"medium\\\">Soy el consolidador</ion-label>\\r\\n                    <ion-checkbox\\r\\n                      slot=\\\"start\\\"\\r\\n                      [checked]=\\\"formData.iAmConsolidator\\\"\\r\\n                      (ionChange)=\\\"setCheckedValue('iAmConsolidator')\\\"\\r\\n                    ></ion-checkbox>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" *ngIf=\\\"formData.consolidated && !formData.iAmConsolidator\\\">\\r\\n                  <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Seleccione un miembro (*)</ion-label>\\r\\n                    <ion-input\\r\\n                      [readonly]=\\\"true\\\"\\r\\n                      [value]=\\\"getReferredNames()\\\"\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      class=\\\"no-selected-text\\\"\\r\\n                      (click)=\\\"modalMember()\\\"\\r\\n                    ></ion-input>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\r\\n              <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campos requeridos.</i></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\r\\n              <ion-button color=\\\"medium\\\" (click)=\\\"confirmCancel()\\\">\\r\\n                <ion-icon name=\\\"close-outline\\\"></ion-icon>&nbsp;\\r\\n                <ion-text>Cancelar</ion-text>\\r\\n              </ion-button>\\r\\n              <ion-button color=\\\"primary\\\" (click)=\\\"confirmRegister()\\\">\\r\\n                <ion-icon name=\\\"save-outline\\\"></ion-icon>&nbsp;\\r\\n                <ion-text>Guardar</ion-text>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n\\r\\n    <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"successRegister && successData\\\">\\r\\n      <ion-card>\\r\\n        <ion-card-content>\\r\\n          <ion-row>\\r\\n            <ion-col [size]=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n              <ion-img class=\\\"pictureLogo2\\\" [src]=\\\"'/assets/icon/check.svg'\\\"></ion-img>\\r\\n              <ion-card-title class=\\\"ion-margin-top\\\">{{ successData.msg }}</ion-card-title>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\r\\n              <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\r\\n                <ion-icon name=\\\"chevron-back-outline\\\" slot=\\\"start\\\"></ion-icon>&nbsp;\\r\\n                <ion-text>Regresar al listado de miembros</ion-text>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\";","export default \".password-text {\\n  font-size: 2em !important;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxccmVnaXN0cm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtBQUNGIiwiZmlsZSI6InJlZ2lzdHJvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXNzd29yZC10ZXh0IHtcclxuICBmb250LXNpemU6IDJlbSAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {NavController} from '@ionic/angular';\r\nimport dayjs from 'dayjs';\r\nimport {MiembrosService} from '../miembros.service';\r\nimport {AsignarConsolidadorPage} from '../asignar-consolidador/asignar-consolidador.page';\r\nimport {AsignarGrupoFamiliarPage} from '../asignar-grupo-familiar/asignar-grupo-familiar.page';\r\nimport {DetallesMiembroService} from '../detalles-miembro/detalles-miembro.service';\r\nimport {AxiosService} from '../../../services/axios.service';\r\nimport {GlobalService} from '../../../services/global.service';\r\nimport {\r\n  checkNameOrLastName, checkPhone,\r\n  onlyLettersInputValidation,\r\n  onlyNumbersInputValidation\r\n} from '../../../../Utils/validations.functions';\r\nimport {CookiesService} from '../../../services/cookies.service';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.page.html',\r\n  styleUrls: ['./registro.page.scss'],\r\n})\r\nexport class RegistroPage implements OnInit {\r\n\r\n  civilStatus = [];\r\n  gender = [];\r\n  myId: string|null = null;\r\n  successRegister = false;\r\n  successData: any = null;\r\n  referralData: any = null;\r\n  groupData: any = null;\r\n  maxDate: any = null;\r\n  churches: any[] = [];\r\n  church: any = null;\r\n  formData: any = {\r\n    phone: null,\r\n    names: null,\r\n    lastNames: null,\r\n    email: null,\r\n    birthday: null,\r\n    civilStatus: null,\r\n    gender: null,\r\n    locality: null,\r\n    direction: null,\r\n    petition: null,\r\n    attendGroup: false,\r\n    groupId: null,\r\n    roles: [4],\r\n    referred: null,\r\n    consolidated: false,\r\n    church: null,\r\n    iAmConsolidator: true,\r\n    created_at: null\r\n  };\r\n\r\n  constructor(\r\n    private axios: AxiosService,\r\n    private cookiesService: CookiesService,\r\n    private globalSer: GlobalService,\r\n    private navCtrl: NavController,\r\n    private detallesMiembroService: DetallesMiembroService,\r\n    private miembrosService: MiembrosService,\r\n    private router: Router,\r\n  ) {\r\n    this.maxDate = dayjs().format('YYYY-MM-DD');\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const data = await this.cookiesService.getCookie('data');\r\n    if (data) this.myId = data._id;\r\n    // check if exist session\r\n    if (!this.globalSer.checkSession()) await this.router.navigate(['/ingresar']);\r\n    else if (!this.globalSer.checkRoleToEnableAddOrUpdate()) {\r\n      await this.globalSer.presentAlert('Alerta', 'Disculpe, pero no cuenta con privilegios para registrar nuevos miembros.');\r\n      await this.navCtrl.back();\r\n    }\r\n    else {\r\n      this.civilStatus = this.detallesMiembroService.civilStatusList;\r\n      this.gender = this.detallesMiembroService.genderList;\r\n    }\r\n    await this.getChurches();\r\n  }\r\n\r\n  async getChurches() {\r\n    this.churches = await this.miembrosService.getChurches();\r\n    await this.cookiesService.setCookie('churches', this.churches);\r\n    if (this.churches.length === 1) {\r\n      this.formData.church = this.churches[0]._id;\r\n      this.church = this.churches[0];\r\n    }\r\n  }\r\n\r\n  async registerMember() {\r\n    await this.globalSer.presentLoading('Registrando, por favor espere ...');\r\n    const data: any = {...this.formData};\r\n    if (data.iAmConsolidator) data.referred = this.myId;\r\n    const res = await this.miembrosService.registerUser(data);\r\n\r\n    if (res && !res.error) {\r\n      this.successData = res;\r\n      this.successRegister = true;\r\n      await this.globalSer.dismissLoading();\r\n    }\r\n    else if (res && res.error) {\r\n      await this.globalSer.dismissLoading();\r\n      await this.globalSer.errorSession();\r\n    }\r\n    else await this.globalSer.dismissLoading();\r\n  }\r\n\r\n  async back() {\r\n    await this.navCtrl.back();\r\n  }\r\n\r\n  setCheckedValue(input) {\r\n    this.formData[input] = !this.formData[input];\r\n    if (input === 'attendGroup' && !this.formData.attendGroup) {\r\n      this.formData.groupId = null;\r\n      this.groupData = null;\r\n    }\r\n    if (input === 'consolidated' && !this.formData.consolidated) {\r\n      this.formData.iAmConsolidator = true;\r\n      this.formData.petition = null;\r\n      this.formData.referred = null;\r\n      this.referralData = null;\r\n    }\r\n    if (input === 'iAmConsolidator' && !this.formData.iAmConsolidator) {\r\n      this.formData.referred = null;\r\n      this.referralData = null;\r\n    }\r\n  }\r\n\r\n  getReferredNames() {\r\n    return this.referralData ? `${this.referralData.names} ${this.referralData.lastNames}` : null;\r\n  }\r\n\r\n  getGroupLabel() {\r\n    return this.groupData ?\r\n      `Sector: ${this.groupData.sector} / Sub-sector: ${this.groupData.subSector} / Grupo #: ${this.groupData.number}`\r\n      : null;\r\n  }\r\n\r\n  setDate() {\r\n    if (this.formData.birthday) {\r\n      this.formData.birthday = dayjs(this.formData.birthday).format('YYYY-MM-DD');\r\n    }\r\n  }\r\n\r\n  validateOnlyNumbers(event: any) {\r\n    onlyNumbersInputValidation(event);\r\n  }\r\n\r\n  validateOnlyLetters(event: any) {\r\n    onlyLettersInputValidation(event);\r\n  }\r\n\r\n  // Alerts\r\n\r\n  async showListChurches() {\r\n    const inputs: any = [];\r\n    for (const [index, value] of this.churches.entries()) {\r\n      inputs.push({\r\n        name: `documentType`,\r\n        type: 'radio',\r\n        label: value.name,\r\n        value: index,\r\n        checked: this.church?._id === value._id,\r\n      });\r\n    }\r\n\r\n    await this.globalSer.alertWithList({\r\n      header: 'Seleccione',\r\n      inputs,\r\n      confirmAction: (selectedValue) => {\r\n        this.formData.church = this.churches[selectedValue]?._id || null;\r\n        this.church = this.churches[selectedValue] || null;\r\n      }\r\n    });\r\n  }\r\n\r\n  async showAlertList(input: string, nameArray: string, selected: any = null) {\r\n    const inputs: any[] = [];\r\n    for (const [i, value] of this[nameArray].entries()) {\r\n      inputs.push({\r\n        name: `value-${i}`,\r\n        type: 'radio',\r\n        label: value,\r\n        value: i,\r\n        checked: selected !== null && selected.toString() === i.toString(),\r\n      });\r\n    }\r\n\r\n    await this.globalSer.alertWithList({\r\n      header: 'Seleccione',\r\n      inputs,\r\n      confirmAction: (selectedValue) => {\r\n        this.formData[input] = selectedValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  async confirmCancel() {\r\n    await this.globalSer.alertConfirm({\r\n      header: 'Confirme',\r\n      message: '¿Está seguro qué desea cancelar el registro?',\r\n      confirmAction: () => this.back()\r\n    });\r\n  }\r\n\r\n  // Modals\r\n  async modalMember() {\r\n    const updateData = (member: any) => {\r\n      this.referralData = member || null;\r\n      this.formData.referred = member ? member._id : null;\r\n    };\r\n\r\n    await this.globalSer.loadModal(\r\n      AsignarConsolidadorPage,\r\n      { selectedId: this.formData.referred },\r\n      false,\r\n      updateData\r\n    );\r\n  }\r\n\r\n  async modalGroups() {\r\n    const updateData = (group: any) => {\r\n      this.groupData = group || null;\r\n      this.formData.groupId = group ? group._id : null;\r\n    };\r\n\r\n    await this.globalSer.loadModal(\r\n      AsignarGrupoFamiliarPage,\r\n      { selectedId: this.formData.groupId },\r\n      false,\r\n      updateData\r\n    );\r\n  }\r\n\r\n  validateData(): string|null {\r\n    if (!checkPhone(this.formData.phone)) return 'Disculpe, pero debe indicar un número de teléfono válido.';\r\n    if (!checkNameOrLastName(this.formData.names)) return 'Disculpe, pero debe indicar un nombre válido.';\r\n    if (!checkNameOrLastName(this.formData.lastNames)) return 'Disculpe, pero debe indicar un apellido válido.';\r\n    // if (!checkIfValueIsNumber(`${this.formData.role}`)) return 'Disculpe, pero debe seleccionar un rol para el miembro.';\r\n    if (this.formData.consolidated && !this.formData.iAmConsolidator && !this.formData.referred)\r\n      return 'Disculpe, pero debe seleccionar un miembro consolidador.';\r\n    if (this.formData.attendGroup && !this.formData.groupId)\r\n      return 'Disculpe, pero debe seleccionar un grupo familiar.';\r\n\r\n    return null;\r\n  }\r\n\r\n  async confirmRegister() {\r\n    const validated = this.validateData();\r\n\r\n    if (!validated) {\r\n      await this.globalSer.alertConfirm({\r\n        header: 'Confirme',\r\n        message: '¿Está seguro qué desea registar a este nuevo miembro?',\r\n        confirmAction: () => this.registerMember()\r\n      });\r\n    }\r\n    else {\r\n      await this.globalSer.presentAlert('Alerta', validated || 'Disculpe, pero debe completar el formulario.');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}