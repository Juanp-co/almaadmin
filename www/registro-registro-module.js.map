{"version":3,"sources":["./src/app/views/miembros/registro/registro-routing.module.ts","./src/app/views/miembros/registro/registro.module.ts","./src/app/views/miembros/registro/registro.page.html","./src/app/views/miembros/registro/registro.page.scss","./src/app/views/miembros/registro/registro.page.ts"],"names":[],"mappings":"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","file":"registro-registro-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistroPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPageRoutingModule } from './registro-routing.module';\n\nimport { RegistroPage } from './registro.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistroPageRoutingModule\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Registrar miembro</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-row>\\n    <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"!successRegister\\\">\\n      <ion-card>\\n        <ion-card-content>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-text color=\\\"medium\\\">\\n                <p>\\n                  <ion-icon name=\\\"alert-circle-outline\\\"></ion-icon>\\n                  Todos los miembros registrados dispondrán de la siguiente contraseña para el acceso: <b><i>alma1234</i></b>.\\n                  Estos podrán cambiarla (si lo desean) desde la Aplicación Móvil o desde el Panel Administrador (en caso de disponga del rol).\\n                </p>\\n              </ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de documento (*)</ion-label>\\n                <ion-input\\n                  [readonly]=\\\"true\\\"\\n                  [value]=\\\"formData.documentType ? getDocumentLabel(formData.documentType) : ''\\\"\\n                  autocomplete=\\\"off\\\"\\n                  class=\\\"no-selected-text\\\"\\n                  (click)=\\\"showAlertDocumentList(formData.documentType)\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Número de documento (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.document\\\"\\n                  autocomplete=\\\"off\\\"\\n                  maxlength=\\\"10\\\"\\n                  (keypress)=\\\"validateOnlyNumbers($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                >\\n                </ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nombre(s) (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.names\\\"\\n                  autocomplete=\\\"off\\\"\\n                  (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Apellido(s) (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.lastNames\\\"\\n                  autocomplete=\\\"off\\\"\\n                  (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nº de Teléfono (usuario) (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.phone\\\"\\n                  autocomplete=\\\"off\\\"\\n                  maxlength=\\\"13\\\"\\n                  (keypress)=\\\"validateOnlyNumbers($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Correo electrónico</ion-label>\\n                <ion-input [(ngModel)]=\\\"formData.email\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Rol (*)</ion-label>\\n                <ion-input\\n                  [readonly]=\\\"true\\\"\\n                  [value]=\\\"roles[formData.role] || ''\\\"\\n                  autocomplete=\\\"off\\\"\\n                  class=\\\"no-selected-text\\\"\\n                  (click)=\\\"showRoleListAlert(formData.role)\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nº de documento padre espiritual (opcional)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.referred\\\"\\n                  autocomplete=\\\"off\\\"\\n                  maxlength=\\\"15\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                >\\n                </ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label color=\\\"medium\\\">Asignar miembro consolidador</ion-label>\\n                <ion-checkbox\\n                  slot=\\\"start\\\"\\n                  [checked]=\\\"formData.consolidator\\\"\\n                  (ionChange)=\\\"checkConsolidator()\\\"\\n                ></ion-checkbox>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"6\\\" *ngIf=\\\"formData.consolidator\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Seleccione un miembro (*)</ion-label>\\n                <ion-input\\n                  [readonly]=\\\"true\\\"\\n                  [value]=\\\"getConsolidatorsNames()\\\"\\n                  autocomplete=\\\"off\\\"\\n                  class=\\\"no-selected-text\\\"\\n                  (click)=\\\"modalMember()\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\n              <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campos requeridos.</i></ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\n              <ion-button color=\\\"light\\\" (click)=\\\"confirmCancel()\\\">\\n                <ion-icon name=\\\"close-outline\\\"></ion-icon>&nbsp;\\n                <ion-text>Cancelar</ion-text>\\n              </ion-button>\\n              <ion-button color=\\\"primary\\\" (click)=\\\"confirmRegister()\\\">\\n                <ion-icon name=\\\"save-outline\\\"></ion-icon>&nbsp;\\n                <ion-text>Guardar</ion-text>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n\\n    <ion-col class=\\\"ion-no-margin\\\" size=\\\"12\\\" *ngIf=\\\"successRegister && successData\\\">\\n      <ion-card>\\n        <ion-card-content>\\n          <ion-row>\\n            <ion-col [size]=\\\"12\\\" class=\\\"ion-text-center\\\">\\n              <ion-img class=\\\"pictureLogo2\\\" [src]=\\\"'/assets/icon/check.svg'\\\"></ion-img>\\n              <ion-card-title class=\\\"ion-margin-top\\\">{{ successData.msg }}</ion-card-title>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\n                <ion-icon name=\\\"chevron-back-outline\\\" slot=\\\"start\\\"></ion-icon>&nbsp;\\n                <ion-text>Regresar al listado de miembros</ion-text>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\";","export default \".password-text {\\n  font-size: 2em !important;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3JlZ2lzdHJvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0VBQ0EsaUJBQUE7QUFDRiIsImZpbGUiOiJyZWdpc3Ryby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFzc3dvcmQtdGV4dCB7XHJcbiAgZm9udC1zaXplOiAyZW0gIWltcG9ydGFudDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AlertController, NavController} from '@ionic/angular';\nimport {DetallesMiembroService} from '../detalles-miembro/detalles-miembro.service';\nimport {MiembrosService} from '../miembros.service';\nimport {AsignarConsolidadorPage} from '../asignar-consolidador/asignar-consolidador.page';\nimport {AxiosService} from '../../../services/axios.service';\nimport {GlobalService} from '../../../services/global.service';\nimport {\n  checkDocument,\n  checkEmail, checkIfValueIsNumber,\n  checkNameOrLastName, checkPhone,\n  onlyLettersInputValidation,\n  onlyNumbersInputValidation\n} from '../../../../Utils/validations.functions';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage implements OnInit {\n\n  roles = [];\n  documentTypes = [];\n  successRegister = false;\n  successData: any = null;\n  consolidatorMember: any = null;\n  formData: any = {\n    documentType: null,\n    document: null,\n    email: null,\n    phone: null,\n    names: null,\n    lastNames: null,\n    role: null,\n    referred: null,\n    consolidator: false,\n    consolidatorId: null,\n  };\n\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private alertCtrl: AlertController,\n    private axios: AxiosService,\n    private globalSer: GlobalService,\n    private navCtrl: NavController,\n    private detallesMiembroService: DetallesMiembroService,\n    private miembrosService: MiembrosService,\n    private router: Router,\n  ) {\n    // check if exist session\n    if (!this.globalSer.checkSession()) this.router.navigate(['/ingresar']);\n    else {\n      this.documentTypes = detallesMiembroService.documentTypesList;\n      this.roles = this.globalSer.roles;\n    }\n  }\n\n  async ngOnInit() {\n    // check if exist session\n    if (!this.globalSer.checkSession()) await this.router.navigate(['/ingresar']);\n    else if (!this.globalSer.checkRoleToEnableAddOrUpdate()) {\n      await this.globalSer.presentAlert('Alerta', 'Disculpe, pero no cuenta con privilegios para registrar nuevos miembros.');\n      await this.navCtrl.back();\n    }\n  }\n\n  async registerMember() {\n    await this.globalSer.presentLoading('Registrando, por favor espere ...');\n\n    const data: any = {...this.formData};\n    data.document = `${data.documentType}${data.document}`;\n\n    const res = await this.miembrosService.registerUser(data);\n\n    if (res && !res.error) {\n      this.successData = res;\n      this.successRegister = true;\n      await this.globalSer.dismissLoading();\n    }\n    else if (res && res.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else {\n      await this.globalSer.dismissLoading();\n    }\n  }\n\n  async back() {\n    await this.navCtrl.back();\n  }\n\n  // getters and setters\n  getDocumentLabel(value: any) {\n    if (!value) return null;\n    const da = this.documentTypes.find(d => d.val === value);\n    return da ? da.label : null;\n  }\n\n  checkConsolidator() {\n    if (this.formData.consolidator) {\n      this.consolidatorMember = null;\n    }\n    this.formData.consolidator = !this.formData.consolidator;\n  }\n\n  getConsolidatorsNames() {\n    return this.consolidatorMember ? `${this.consolidatorMember.names} ${this.consolidatorMember.lastNames}` : null;\n  }\n\n  validateOnlyNumbers(event: any) {\n    onlyNumbersInputValidation(event);\n  }\n\n  validateOnlyLetters(event: any) {\n    onlyLettersInputValidation(event);\n  }\n\n  // Alerts\n\n  async showRoleListAlert(selected: any = null) {\n    const inputs: any[] = [];\n    for (const [i, value] of this.roles.entries()) {\n      inputs.push({\n        name: `roles`,\n        type: 'radio',\n        label: value,\n        value: i,\n        checked: selected !== null && selected === i,\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione un rol',\n      inputs,\n      confirmAction: (selectedValue) => {\n        this.formData.role = selectedValue;\n      }\n    });\n  }\n\n  async showAlertDocumentList(selected: any = null) {\n    const inputs: any[] = [];\n    for (const value of this.documentTypes) {\n      inputs.push({\n        name: `documentType`,\n        type: 'radio',\n        label: value.label,\n        value: value.val,\n        checked: selected !== null && selected === value.val,\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValue) => {\n        this.formData.documentType = selectedValue;\n      }\n    });\n  }\n\n  async confirmCancel() {\n    await this.globalSer.alertConfirm({\n      header: 'Confirme',\n      message: '¿Está seguro qué desea cancelar el registro?',\n      confirmAction: () => this.back()\n    });\n  }\n\n  // members\n  async modalMember() {\n    const updateData = (member: any) => {\n      this.consolidatorMember = member || null;\n      this.formData.consolidatorId = member ? member._id : null;\n    };\n\n    await this.globalSer.loadModal(\n      AsignarConsolidadorPage,\n      { selectedId: this.formData.consolidatorId },\n      false,\n      updateData\n    );\n  }\n\n  validateData(): string|null {\n    if (!/^([CC|CE|PE|TI|PAS]){2,3}/.test(this.formData.documentType)) return 'Disculpe, pero debe indicar el tipo de documento.';\n    if (!/[0-9]{5,9}/.test(this.formData.document)) return 'Disculpe, pero debe indicar el número de documento de identidad.';\n    if (!checkNameOrLastName(this.formData.names)) return 'Disculpe, pero debe indicar un nombre válido.';\n    if (!checkNameOrLastName(this.formData.lastNames)) return 'Disculpe, pero debe indicar un apellido válido.';\n    if (!checkPhone(this.formData.phone)) return 'Disculpe, pero debe indicar un número de teléfono válido.';\n    if (this.formData.email && !checkEmail(this.formData.email)) return 'Disculpe, pero debe indicar un correo electrónico válido.';\n    if (!checkIfValueIsNumber(`${this.formData.role}`)) return 'Disculpe, pero debe seleccionar un rol para el miembro.';\n    if (this.formData.referred && !checkDocument(`${this.formData.referred.toUpperCase()}`))\n      return 'Disculpe, pero debe indicar un número de documento correcto del miemro referente (ejm: CC12345678).';\n\n    return null;\n  }\n\n  async confirmRegister() {\n    const validated = this.validateData();\n\n    if (!validated) {\n      this.globalSer.alertConfirm({\n        header: 'Confirme',\n        message: '¿Está seguro qué desea registar a este nuevo miembro?',\n        confirmAction: () => this.registerMember()\n      });\n    }\n    else {\n      await this.globalSer.presentAlert('Alerta', validated || 'Disculpe, pero debe completar el formulario.');\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}